NAME: thronesdb-php
LAST DEPLOYED: Fri Nov 13 20:44:10 2020
NAMESPACE: default
STATUS: pending-install
REVISION: 1
USER-SUPPLIED VALUES:
affinity: {}
autoscaling:
  enabled: false
  maxReplicas: 100
  minReplicas: 1
  targetCPUUtilizationPercentage: 80
fullnameOverride: ""
image:
  pullPolicy: IfNotPresent
  repository: adkateki/thronesdb-sk-php
  tag: "2.0"
imagePullSecrets: []
ingress:
  annotations: {}
  enabled: false
  hosts:
  - host: chart-example.local
    paths: []
  tls: []
nameOverride: ""
nodeSelector: {}
podAnnotations: {}
podSecurityContext: {}
replicaCount: 1
resources: {}
securityContext: {}
service:
  port: 9000
  type: ClusterIP
serviceAccount:
  annotations: {}
  create: true
  name: ""
thronesdbPhp:
  configPath: config
  jsondata: /var/www/thronesdb/throneteki-json-data
  jsondataPvc: thronesdb-jsondata
  path: /var/www/thronesdb/public
  pathPvc: thronesdb-public
tolerations: []

COMPUTED VALUES:
affinity: {}
autoscaling:
  enabled: false
  maxReplicas: 100
  minReplicas: 1
  targetCPUUtilizationPercentage: 80
fullnameOverride: ""
image:
  pullPolicy: IfNotPresent
  repository: adkateki/thronesdb-sk-php
  tag: "2.0"
imagePullSecrets: []
ingress:
  annotations: {}
  enabled: false
  hosts:
  - host: chart-example.local
    paths: []
  tls: []
nameOverride: ""
nodeSelector: {}
podAnnotations: {}
podSecurityContext: {}
replicaCount: 1
resources: {}
securityContext: {}
service:
  port: 9000
  type: ClusterIP
serviceAccount:
  annotations: {}
  create: true
  name: ""
thronesdbPhp:
  configPath: config
  jsondata: /var/www/thronesdb/throneteki-json-data
  jsondataPvc: thronesdb-jsondata
  path: /var/www/thronesdb/public
  pathPvc: thronesdb-public
tolerations: []

HOOKS:
---
# Source: thronesdb-php/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "thronesdb-php-test-connection"
  labels:
    helm.sh/chart: thronesdb-php-0.1.0
    app.kubernetes.io/name: thronesdb-php
    app.kubernetes.io/instance: thronesdb-php
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['thronesdb-php:9000']
  restartPolicy: Never
MANIFEST:
---
# Source: thronesdb-php/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: thronesdb-php
  labels:
    helm.sh/chart: thronesdb-php-0.1.0
    app.kubernetes.io/name: thronesdb-php
    app.kubernetes.io/instance: thronesdb-php
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: thronesdb-php/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: thronesdb-php-config
data:
  env.local: |
    #
    # Run "composer dump-env prod" to compile .env files for production use (requires symfony/flex >=1.2).
    # https://symfony.com/doc/current/best_practices.html#use-environment-variables-for-infrastructure-configuration
  
    ###> symfony/framework-bundle ###
    APP_ENV=prod
    APP_SECRET=ThisTokenIsNotSoSecretChangeIt
    #TRUSTED_PROXIES=127.0.0.1,127.0.0.2
    #TRUSTED_HOSTS='^(localhost|example\.com)$'
    ###< symfony/framework-bundle ###
  
    ###> symfony/swiftmailer-bundle ###
    # For Gmail as a transport, use: "gmail://username:password@localhost"
    # For a generic SMTP server, use: "smtp://localhost:25?encryption=&auth_mode="
    # Delivery is disabled by default via "null://localhost"
    # MAILER_URL=null://localhost
    ###< symfony/swiftmailer-bundle ###
  
    ###> doctrine/doctrine-bundle ###
    # Format described at https://www.doctrine-project.org/projects/doctrine-dbal/en/latest/reference/configuration.html#connecting-using-a-url
    # For an SQLite database, use: "sqlite:///%kernel.project_dir%/var/data.db"
    # For a PostgreSQL database, use: "postgresql://db_user:db_password@127.0.0.1:5432/db_name?serverVersion=11&charset=utf8"
    # IMPORTANT: You MUST configure your server version, either here or in config/packages/doctrine.yaml
    DATABASE_URL=mysql://user:pass@mysql:3306/thronesdb?serverVersion=5.7
    ###< doctrine/doctrine-bundle ###
  
    ###> nelmio/cors-bundle ###
    CORS_ALLOW_ORIGIN=^https?://(localhost|127\.0\.0\.1)(:[0-9]+)?$
    ###< nelmio/cors-bundle ###
  
    ###> ThronesDB ###
    # Caching
    APP_CACHE_EXPIRATION=600
  
    # Email sender
    APP_EMAIL_SENDER_ADDRESS=no-reply@thronesdb.com
    APP_EMAIL_SENDER_NAME=Admin
  
    # Branding
    APP_WEBSITE_NAME=SKThronesDB
    APP_WEBSITE_URL=skthrone.com
    APP_GAME_NAME="A Game of Thrones"
    APP_PUBLISHER_NAME="Fantasy Flight Games"
  
    # Analytics & AdSense
    APP_GOOGLE_ANALYTICS_TRACKING_CODE=UA-00000000-1
  
    # Allow search engines to index this site
    APP_ALLOW_SEARCH_ENGINE_TRACKING=false
    ###< ThronesDB ###
---
# Source: thronesdb-php/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: thronesdb-php
  labels:
    helm.sh/chart: thronesdb-php-0.1.0
    app.kubernetes.io/name: thronesdb-php
    app.kubernetes.io/instance: thronesdb-php
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 9000
      targetPort: php
      protocol: TCP
      name: php
  selector:
    app.kubernetes.io/name: thronesdb-php
    app.kubernetes.io/instance: thronesdb-php
---
# Source: thronesdb-php/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: thronesdb-php
  labels:
    helm.sh/chart: thronesdb-php-0.1.0
    app.kubernetes.io/name: thronesdb-php
    app.kubernetes.io/instance: thronesdb-php
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: thronesdb-php
      app.kubernetes.io/instance: thronesdb-php
  template:
    metadata:
      labels:
        app.kubernetes.io/name: thronesdb-php
        app.kubernetes.io/instance: thronesdb-php
    spec:
      serviceAccountName: thronesdb-php
      securityContext:
        {}
      containers:
        - name: thronesdb-php
          securityContext:
            {}
          image: "adkateki/thronesdb-sk-php:2.0"
          imagePullPolicy: IfNotPresent
          ports:
            - name: php
              containerPort: 9000
              protocol: TCP
          volumeMounts:
            - mountPath: /var/www/thronesdb/public
              name: publicpvc
            - mountPath: /var/www/thronesdb/.env.local
              subPath: .env.local
              name: configmap
            - mountPath: /var/www/thronesdb/throneteki-json-data
              name: jsondatapvc
      volumes:
      - name: configmap
        configMap:
          name: thronesdb-php-config
      - name: publicpvc
        persistentVolumeClaim:
          claimName: thronesdb-public
      - name: jsondatapvc
        persistentVolumeClaim:
          claimName: thronesdb-jsondata

NOTES:
1. Get the application URL by running these commands:
  export POD_NAME=$(kubectl get pods --namespace default -l "app.kubernetes.io/name=thronesdb-php,app.kubernetes.io/instance=thronesdb-php" -o jsonpath="{.items[0].metadata.name}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace default port-forward $POD_NAME 8080:80
